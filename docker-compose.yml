services:
  postgres:
    image: postgres:14.6-alpine
    ports:
      - "5433:5432"
    # environment:
    #   - POSTGRES_DB=dbname
    #   - POSTGRES_USER=dbuser
    #   - POSTGRES_PASSWORD=password
    env_file:
      - .docker_env
  app:
    image: "backend-app"
    build: 
      context: .
      dockerfile: Dockerfile
    user: projectuser:projectuser
    ports:
      - "8000:8000"
    # volumes:
      # - ./src:/src
    command:
      - /bin/sh
      - -c
      - |
        python manage.py makemigrations
        python manage.py migrate
        python manage.py runserver 0.0.0.0:8000
    depends_on:
      - worker
      - rmq
    env_file:
      - .docker_env
  redis:
    image: redis:7.0.5-alpine
    hostname: redis
  worker:
    build: 
      context: .
    hostname: worker
    entrypoint: celery
    command: -A app.celery.app worker --loglevel=info
    # volumes:
    #   - ./src:/src
    links:
      - redis
    depends_on:
      - redis
      - postgres
    env_file:
      - .docker_env
  flower:
    build: 
      context: .
    hostname: flower
    entrypoint: celery
    command: -A app.celery.app flower
    # volumes:
    #   - ./src:/src
    links:
      - redis
    depends_on:
      - app
    env_file:
      - .docker_env
    ports:
      - "5555:5555"
  rmq:
    image: rabbitmq:3.10-management
    restart: always
    container_name: demo_rmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RMQ_PASS}
    env_file:
      - .docker_env
    # volumes:
      # - rabbitmq_data_volume:/var/lib/rabbitmq/
    ports:
      - 1234:15672
      - 5671-5672:5671-5672